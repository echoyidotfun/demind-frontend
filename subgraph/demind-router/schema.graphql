type Swap @entity(immutable: true) {
  id: ID! # 交易唯一ID (txHash-logIndex)
  tokenIn: Token! # 输入代币
  tokenOut: Token! # 输出代币
  amountIn: BigDecimal! # 输入金额
  amountOut: BigDecimal! # 输出金额
  timestamp: BigInt! # 时间戳
  date: String! # 日期 (YYYY-MM-DD格式)
  sender: Bytes! # 交易发送者
  txHash: Bytes! # 交易哈希
  blockNumber: BigInt! # 区块号
}

type Token @entity(immutable: false) {
  id: ID! # 代币地址
  address: Bytes! # 代币地址（冗余，便于查询）
  symbol: String # 代币符号（可选，需从合约获取）
  name: String # 代币名称（可选，需从合约获取）
  decimals: Int # 代币精度（可选，需从合约获取）
  volumeTokenIn: BigInt! # 作为输入代币的总交易量
  volumeTokenOut: BigInt! # 作为输出代币的总交易量
  volumeUSD: BigDecimal! # 代币美元总交易量
  swapsIn: [Swap!]! @derivedFrom(field: "tokenIn") # 作为输入的交易
  swapsOut: [Swap!]! @derivedFrom(field: "tokenOut") # 作为输出的交易
  dailyVolumes: [TokenDailyVolume!]! @derivedFrom(field: "token") # 每日统计
}

type DailyVolume @entity(immutable: false) {
  id: ID! # 日期 (YYYY-MM-DD)
  date: String! # 日期 (YYYY-MM-DD)
  volumeIn: BigDecimal! # 当日总输入交易量
  volumeOut: BigDecimal! # 当日总输出交易量
  swapCount: BigInt! # 当日交易笔数
  uniqueUsers: [String!]! # 当日唯一用户地址列表
}

type TokenDailyVolume @entity(immutable: false) {
  id: ID! # tokenAddress-date
  token: Token! # 代币引用
  date: String! # 日期 (YYYY-MM-DD)
  volumeIn: BigDecimal! # 当日作为输入的交易量
  volumeOut: BigDecimal! # 当日作为输出的交易量
  dailyVolume: DailyVolume! # 关联到对应的每日总量
}
